// src/App.tsx
import React, { useState, useEffect, useCallback } from "react";
import type { QuizData, Question, QuizMode } from "./utils/types";
import {
  fetchAllQuizData,
  prepareQuizQuestions,
  CHAPTER_FILES,
} from "./utils/data";
import ModeSelector from "./components/ModeSelector";
import Quiz from "./components/Quiz";
import Footer from "./components/Footer";

// ‡πÉ‡∏ä‡πâ CSS ‡∏á‡πà‡∏≤‡∏¢‡πÜ ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏ü‡∏≠‡∏ô‡∏ï‡πå
const containerStyle = {
  minHeight: "100vh",
  backgroundColor: "#f4f7f9",
  // padding: "40px 20px",
};

const App: React.FC = () => {
  const [allQuizData, setAllQuizData] = useState<QuizData | null>(null);
  const [isLoading, setIsLoading] = useState(true);
  const [currentQuizQuestions, setCurrentQuizQuestions] = useState<
    Question[] | null
  >(null);
  const [quizChapterName, setQuizChapterName] = useState<string | null>(null);

  // 1. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠ Component ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
  useEffect(() => {
    const loadData = async () => {
      setIsLoading(true);
      const data = await fetchAllQuizData();
      setAllQuizData(data);
      setIsLoading(false);
    };
    loadData();
  }, []);

  // 2. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
  const handleStartQuiz = useCallback(
    (mode: QuizMode, chapterName: string | null) => {
      if (!allQuizData) return;

      let questionsToUse: Question[] = [];
      let name: string = "";

      if (mode === "single_chapter" && chapterName) {
        // ‡πÇ‡∏´‡∏°‡∏î 1: ‡πÅ‡∏¢‡∏Å‡∏ó‡∏≥‡∏ó‡∏µ‡∏•‡∏∞‡∏ö‡∏ó
        questionsToUse = allQuizData[chapterName] || [];
        name = chapterName;
      } else if (mode === "random_80") {
        // ‡πÇ‡∏´‡∏°‡∏î 2: ‡∏™‡∏∏‡πà‡∏° 80 ‡∏Ç‡πâ‡∏≠‡∏à‡∏≤‡∏Å 15 (‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ö‡∏ó‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 10-15 ‡∏Ç‡πâ‡∏≠‡∏ï‡∏≤‡∏°‡πÇ‡∏à‡∏ó‡∏¢‡πå)
        const allQuestions: Question[] = Object.values(allQuizData).flat();
        // ‡∏™‡∏∏‡πà‡∏° 80 ‡∏Ç‡πâ‡∏≠‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 80)
        questionsToUse = prepareQuizQuestions(allQuestions, 80);
        name = "‡∏™‡∏∏‡πà‡∏° 80 ‡∏Ç‡πâ‡∏≠‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å‡∏ö‡∏ó";
      }

      if (questionsToUse.length === 0) {
        alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏°‡∏î/‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ô‡∏µ‡πâ");
        return;
      }

      // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° (‡∏™‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å) ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°
      setCurrentQuizQuestions(prepareQuizQuestions(questionsToUse));
      setQuizChapterName(name);
    },
    [allQuizData]
  );

  // 3. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î/‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
  const handleRestart = () => {
    setCurrentQuizQuestions(null);
    setQuizChapterName(null);
  };

  if (isLoading) {
    return (
      <div
        style={containerStyle}
        className="text-center text-xl font-semibold text-blue-500"
      >
        ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö... üîÑ
      </div>
    );
  }

  if (!allQuizData) {
    return (
      <div
        style={containerStyle}
        className="text-center text-xl font-semibold text-red-500"
      >
        ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå JSON
      </div>
    );
  }

  return (
    <div
      style={containerStyle}
      className="flex items-center flex-col justify-between"
    >
      <div className="w-full h-[80vh] flex justify-center items-center">
        <div className="w-full max-w-4xl">
          <h1 className="text-4xl font-extrabold text-center mb-10 text-gray-800">
            Prepare Software Engineer Final Quiz
          </h1>

          {currentQuizQuestions && quizChapterName ? (
            // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤ Quiz
            <Quiz
              initialQuestions={currentQuizQuestions}
              chapterName={quizChapterName}
              onRestart={handleRestart}
            />
          ) : (
            // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î/‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
            <ModeSelector
              chapters={CHAPTER_FILES}
              onStartQuiz={handleStartQuiz}
              isLoading={isLoading}
            />
          )}
        </div>
      </div>

      <Footer/>
    </div>
  );
};

export default App;
